%{
#include <stdio.h>
#include "absyn.h"
#include "errormsg.h"
#include "symbol.h"
#include "util.h"
#include "y.tab.h"

int yylex();
void yyerror(char * s);
E_Pos to_E_Pos(YYLTYPE pos);

%}

// %define api.location.type {E_Pos};

%union {
    int ival;
    string sval;
}

%token <sval> ID STRING
%token <ival> INT

%token 
    COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK 
    LBRACE RBRACE DOT 
    PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
    AND OR ASSIGN
    ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF 
    BREAK NIL
    FUNCTION VAR TYPE 

%start program

%%

program: exp

exp: var_exp
    ;

var_exp: var
    ;

var: simple_var
    ;

simple_var: ID { printf("%s %d\n", $1, @1.first_column); }
    ;
%%

void yyerror(char *s) {
    EM_error(to_E_Pos(yylloc), "%s", s);
}

E_Pos to_E_Pos(YYLTYPE pos) {
    return (E_Pos) { pos.first_line, pos.first_column, pos.last_line, pos.last_column };
}
